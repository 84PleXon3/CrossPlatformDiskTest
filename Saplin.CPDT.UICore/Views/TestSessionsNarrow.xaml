<?xml version="1.0" encoding="UTF-8"?>
<ctrl:StackRepeater xmlns="http://xamarin.com/schemas/2014/forms"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                    xmlns:ctrl2="clr-namespace:Saplin.CPDT.UICore.Controls;assembly=CPDT.Extra"
                    xmlns:local="clr-namespace:Saplin.CPDT.UICore"
                    xmlns:ctrl="clr-namespace:Saplin.CPDT.UICore.Controls"
                    xmlns:vm="clr-namespace:Saplin.CPDT.UICore.ViewModels"
                    x:Class="Saplin.CPDT.UICore.TestSessionsNarrow" 
                    BindingContext="{x:Static vm:ViewModelContainer.TestSessionsViewModel}"
                    x:DataType="vm:TestSessionsViewModel"
                    ItemsSource="{Binding TestSessions}" 

                    Refresh="{Binding Source={x:Static vm:ViewModelContainer.L11n}, _Locale}"
                    Margin="-10, 0, -10, 0" Padding="10, 0, 10, 0">
    <ctrl:StackRepeater.ItemTemplate>
        <DataTemplate x:DataType="vm:TestSession">
            <ctrl:MasterDetail SelectionGroup="testSessions" IsDetailVisible="{Binding Selected}" Margin="-10, 0, -10, 0" Padding="10, 0, 10, 0" ToggleOnMasterClick="True">
                <ctrl:MasterDetail.MasterTemplate>
                    <DataTemplate x:DataType="vm:TestSession">
                        <StackLayout Orientation="Horizontal" HorizontalOptions="FillAndExpand" Margin="-10, 0, -10, 0" Padding="10, 4, 10, 0">
                            <ctrl2:ExtendedLabel Text="{Binding SelectedNodeText, Mode=OneWay}" MinimumWidthRequest="40" ChangeCursorOnMouseHover="True" VerticalOptions="Center" LineBreakMode="CharacterWrap">
                                <ctrl2:ExtendedLabel.Style>
                                    <OnPlatform x:TypeArguments="Style">
                                        <On Platform="Android, iOS" Value="{StaticResource AccentedLabelEx}" />
                                    </OnPlatform>
                                </ctrl2:ExtendedLabel.Style>
                            </ctrl2:ExtendedLabel>
                            <BoxView Style="{StaticResource VerticalLine}" IsVisible="{Binding Selected}" Margin="0, 0, 4, 0" />
                            <BoxView Style="{StaticResource VerticalLineGray}" IsVisible="{Binding Selected, Converter={StaticResource BoolNot}}" Margin="0, 0, 4, 0" />
                            <StackLayout Orientation="Vertical" HorizontalOptions="FillAndExpand">
                                <StackLayout Orientation="Horizontal" HorizontalOptions="FillAndExpand">
                                    <Label Text="{Binding OrderNumber, StringFormat='#{0}', Mode=OneTime}" LineBreakMode="NoWrap" />
                                    <Label Text="{Binding DriveName}" LineBreakMode="TailTruncation" IsVisible="{Binding Selected, Converter={StaticResource BoolNot}}" />
                                    <Label Text="{Binding DriveName}" LineBreakMode="TailTruncation" WidthRequest="100" IsVisible="{Binding Selected}" />
                                    <ctrl2:ExtendedLabel    Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, Compare}" 
                                                            Command="{Binding Source={x:Static vm:ViewModelContainer.ResultsDbViewModel}, Path=Compare}" 
                                                            CommandParameter="{Binding .}" 
                                                            IsEnabled="{Binding Source={x:Static vm:ViewModelContainer.ResultsDbViewModel}, Mode=OneWay, Path=IsEnabled}" 
                                                            ChangeCursorOnMouseHover="True" 
                                                            VerticalOptions="Start" 
                                                            HorizontalOptions="EndAndExpand"
                                                            LineBreakMode="MiddleTruncation"
                                                            IsVisible="{Binding Selected}"/>
                                    <ctrl2:ExtendedLabel 
                                            Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, Share}" 
                                            Clicked="Share_Clicked"
                                            LineBreakMode="MiddleTruncation">
                                    <ctrl2:ExtendedLabel.IsVisible>
                                                <OnPlatform x:TypeArguments="BindingBase">
                                                    <On Platform="Android, iOS" Value="{Binding Selected}"/>
                                                    <On Platform="macOS, WPF" Value="{Binding HideShare}" />
                                                </OnPlatform>
                                            </ctrl2:ExtendedLabel.IsVisible>
                                    </ctrl2:ExtendedLabel>

                                </StackLayout>
                                
                                <Label Text="{Binding TestStartedTime, StringFormat='{0:HH:mm:ss} {0:d.MM.yyyy}'}" Style="{StaticResource Key=SmallLabel}" VerticalOptions="Start" Margin="0, -6, 0, 4" />
                                    
                                <StackLayout Orientation="Horizontal" HorizontalOptions="FillAndExpand" Margin="0, -6, 0, 0">
                                    <Label LineBreakMode="WordWrap" Margin="0, 0, 2, 0" WidthRequest="52" MinimumWidthRequest="52">
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, Path=SequentialWriteTestShort, StringFormat='{0}'}" Style="{StaticResource Key=SmallSpan}" LineHeight="0.9"/>
                                                <Span Text="{Binding SeqWrite, Converter={StaticResource MbPerSecondToAutoShort}, StringFormat='&#xA;{0}'}" />
                                                <Span Text="{Binding SeqWrite, Converter={StaticResource MbPerSecondToAutoUnit}, StringFormat='&#xA;{0}'}" Style="{StaticResource Key=AccentedSmallSpan}"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                    <Label LineBreakMode="WordWrap" Margin="0, 0, 2, 0" WidthRequest="52" MinimumWidthRequest="52">
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, Path=SequentialReadTestShort, StringFormat='{0}'}" Style="{StaticResource Key=SmallSpan}" LineHeight="0.9"/>
                                                <Span Text="{Binding SeqRead, Converter={StaticResource MbPerSecondToAutoShort}, StringFormat='&#xA;{0}'}" />
                                                <Span Text="{Binding SeqRead, Converter={StaticResource MbPerSecondToAutoUnit}, StringFormat='&#xA;{0}'}" Style="{StaticResource Key=AccentedSmallSpan}"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                    <Label LineBreakMode="WordWrap" Margin="0, 0, 2, 0" WidthRequest="52" MinimumWidthRequest="52">
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, Path=RandomWriteTestShort, StringFormat='{0}'}" Style="{StaticResource Key=SmallSpan}" LineHeight="0.9"/>
                                                <Span Text="{Binding RandWrite, Converter={StaticResource MbPerSecondToAutoShort}, StringFormat='&#xA;{0}'}" />
                                                <Span Text="{Binding RandWrite, Converter={StaticResource MbPerSecondToAutoUnit}, StringFormat='&#xA;{0}'}" Style="{StaticResource Key=AccentedSmallSpan}"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                    <Label LineBreakMode="WordWrap" Margin="0, 0, 2, 0" WidthRequest="52" MinimumWidthRequest="52">
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, Path=RandomReadTestShort, StringFormat='{0}'}" Style="{StaticResource Key=SmallSpan}" LineHeight="0.9"/>
                                                <Span Text="{Binding RandRead, Converter={StaticResource MbPerSecondToAutoShort}, StringFormat='&#xA;{0}'}" />
                                                <Span Text="{Binding RandRead, Converter={StaticResource MbPerSecondToAutoUnit}, StringFormat='&#xA;{0}'}" Style="{StaticResource Key=AccentedSmallSpan}"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                    <Label LineBreakMode="WordWrap" Margin="0, 0, 2, 0" WidthRequest="52" MinimumWidthRequest="52">
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, Path=MemCopyTestShort, StringFormat='{0}'}" Style="{StaticResource Key=SmallSpan}" LineHeight="0.9"/>
                                                <Span Text="{Binding MemCopy, Converter={StaticResource MbPerSecondToAutoShort}, StringFormat='&#xA;{0}'}" />
                                                <Span Text="{Binding MemCopy, Converter={StaticResource MbPerSecondToAutoUnit}, StringFormat='&#xA;{0}'}" Style="{StaticResource Key=AccentedSmallSpan}"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                </StackLayout>
                            </StackLayout>
                        </StackLayout>
                    </DataTemplate>
                </ctrl:MasterDetail.MasterTemplate>
                <ctrl:MasterDetail.DetailTemplate>
                    <DataTemplate x:DataType="vm:TestSession">
                        <StackLayout Padding="0, 0, 0, 10">
<!--                            <Label Style="{x:StaticResource Key=SmallLabel}" LineHeight="0.9" LineBreakMode="MiddleTruncation" >
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding FileName}" />
                                        <Span Text="{Binding ShortOptions, StringFormat='&#xA;{0}'}"/>   
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>-->
                            <Label Text="{Binding FileName}" LineBreakMode="MiddleTruncation" Style="{x:StaticResource Key=SmallLabel}" Margin="0, 4, 0, -8" />
                            <Label Text="{Binding ShortOptions}" LineBreakMode="MiddleTruncation" Style="{x:StaticResource Key=SmallLabel}"  />
                            <ctrl2:ExtendedLabel Text="{Binding CsvFileName}" ChangeCursorOnMouseHover="True" Command="{Binding OpenCsvFolderOrShareFiles}" IsVisible="{Binding CsvFileName, Converter={StaticResource StringNotEmpty}}" Style="{x:StaticResource Key=AccentedSmallLabel}" />
                            
                            <local:TestResultsNarrow IsFooterVisible="False" BindingContext="{Binding Results}" />
                        </StackLayout>
                    </DataTemplate>
                </ctrl:MasterDetail.DetailTemplate>
            </ctrl:MasterDetail>
        </DataTemplate>
    </ctrl:StackRepeater.ItemTemplate>
</ctrl:StackRepeater>