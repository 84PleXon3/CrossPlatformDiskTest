<?xml version="1.0" encoding="UTF-8"?>
<local:TestResultsBase MaxRows="5"
    xmlns="http://xamarin.com/schemas/2014/forms" 
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
    x:Class="Saplin.CPDT.UICore.TestResultsNarrow" 
    xmlns:ctrl="clr-namespace:Saplin.CPDT.UICore.Controls"
    xmlns:ctrl2="clr-namespace:Saplin.CPDT.UICore.Controls;assembly=CPDT.Extra"
    xmlns:anim="clr-namespace:Saplin.CPDT.UICore.Animations"
    xmlns:vm="clr-namespace:Saplin.CPDT.UICore.ViewModels"
    xmlns:local="clr-namespace:Saplin.CPDT.UICore"
    RowSpacing="0" HorizontalOptions="Fill">
    <Grid.RowHeight>
        <OnPlatform x:TypeArguments="GridLength">
            <On Platform="WPF" Value="36"/>  
            <On Platform="macOS" Value="48"/> 
            <On Platform="Android, iOS" Value="44"/>
        </OnPlatform>
    </Grid.RowHeight>
    <Grid.ColumnDefinitions>
        <ColumnDefinition>

            <ColumnDefinition.Width>
                <OnPlatform x:TypeArguments="GridLength">
                    <On Platform="WPF, macOS" Value="Auto"/>  
                    <On Platform="Android, iOS" Value="124"/>
                </OnPlatform>
            </ColumnDefinition.Width>
        </ColumnDefinition>

        <ColumnDefinition>
            <ColumnDefinition.Width>
                <OnPlatform x:TypeArguments="GridLength">
                    <On Platform="WPF, macOS" Value="Auto"/>  
                    <On Platform="Android, iOS" Value="68"/>
                </OnPlatform>
            </ColumnDefinition.Width>
        </ColumnDefinition>

        <ColumnDefinition Width="*" />

    </Grid.ColumnDefinitions>
    <ctrl:GridRepeater.ItemTemplate>
        <DataTemplate x:DataType="vm:TestResultsDetailed">
            <ctrl:GridItem>
                <!-- col 0-->
                <!--<Label Text="{Binding Result.TestName, Converter={StaticResource KeyToL11n}}" LineBreakMode="WordWrap"
                       VerticalOptions="CenterAndExpand" />-->
                <Label LineBreakMode="WordWrap">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding Result.TestName, Converter={StaticResource KeyToL11n}}" />
                            <Span Text="{Binding Result.BlockSizeBytes, StringFormat=' [{0}', Converter={StaticResource BytesToAutoShort}}"/>
                            <Span Text="{Binding Result.BlockSizeBytes, StringFormat='{0}]', Converter={StaticResource BytesToAutoUnit}}" />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>

                <!-- col 1-2-->
                <Label Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, TestNotEnoughMemory}" 
                        LineBreakMode="TailTruncation" IsVisible="{Binding NotEnoughMemory}" VerticalOptions="CenterAndExpand">
                </Label>
                <!-- col 1-->
                <Label Grid.Column="1" Style="{StaticResource AccentedLabel}"
                       IsVisible="{Binding NotEnoughMemory, Converter={StaticResource BoolNot}}"
                       VerticalOptions="CenterAndExpand"
                       BackgroundColor="Blue" TextColor="White">
                    <Label.FormattedText >
                        <FormattedString>
                            <Span Text="{Binding Result.AvgThroughput, Converter={StaticResource MbPerSecondToAuto}}" />
                            <Span Text="{Binding Result.AvgThroughput, Converter={StaticResource MbPerSecondToAutoUnit}, StringFormat='&#10;{0}'}" Style="{StaticResource AccentedItalicSpan}"  />
                        </FormattedString>
                    </Label.FormattedText>
                    <Label.WidthRequest>
                        <OnPlatform x:TypeArguments="x:Double">
                            <On Platform="macOS, WPF" Value="60"/> 
                            <On Platform="Android, iOS" Value="55"/>
                        </OnPlatform>
                    </Label.WidthRequest>
                </Label>
                <!-- col 2-->
                <ctrl2:TimeSeriesGraph VerticalOptions="CenterAndExpand" Results="{Binding Result, Mode=OneTime}" Trigger="{Binding Result}" IsVisible="{Binding ShowTimeSeries}" Smoothing="{Binding SmoothTimeSeries}"
                         Clip="True" Color="{StaticResource DefaultColor}" Grid.Column="2" HeightRequest="38">
                    <ctrl2:TimeSeriesGraph.Margin>
                        <OnPlatform x:TypeArguments="Thickness">
                            <On Platform="macOS, WPF" Value="4, 2, 4, 2"/> 
                            <On Platform="Android, iOS" Value="4, 3, 4, 4"/>
                        </OnPlatform>
                    </ctrl2:TimeSeriesGraph.Margin>
                </ctrl2:TimeSeriesGraph>

                <ctrl2:HistogramGraph VerticalOptions="CenterAndExpand"  BinsNumber="12" IsVisible="{Binding ShowHistogram}" UseCachedResults="true" CacheId="{Binding HistogramCacheId}" 
                                     Color="{StaticResource DefaultColor}" Grid.Column="2" HeightRequest="38">
                    <ctrl2:HistogramGraph.Margin>
                        <OnPlatform x:TypeArguments="Thickness">
                            <On Platform="macOS, WPF" Value="4, 2, 4, 2"/> 
                            <On Platform="Android, iOS" Value="4, 3, 4, 4"/>
                        </OnPlatform>
                    </ctrl2:HistogramGraph.Margin>
                </ctrl2:HistogramGraph>
                <!-- col 2-->
                <StackLayout Grid.Column="2" Opacity="0" IsEnabled="false" IsVisible="{Binding ShowMin}" Margin="6, 0, 0, 0"
                             Orientation="Horizontal" VerticalOptions="CenterAndExpand" HorizontalOptions="StartAndExpand">
                    <Label Style="{StaticResource SmallLabel}" HorizontalOptions="Start" >
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding MinAdjusted, Converter={StaticResource MbPerSecondToAuto}}" />
                                <Span Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, Min, StringFormat='&#10;{0}, '}" Style="{StaticResource SuperSmallSpan}"/>
                                <Span Text="{Binding MinAdjusted, Converter={StaticResource MbPerSecondToAutoUnit}}" Style="{StaticResource SuperSmallSpan}" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label Style="{StaticResource SmallLabel}" HorizontalOptions="Start" IsVisible="{Binding ShowModeH}">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding ModeH, Converter={StaticResource MbPerSecondToAuto}}" />
                                <!--<Span Text="{Binding ModeHPercent,StringFormat='รท{0}%'}" />-->
                                <Span Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, ModeH, StringFormat='&#10;{0}, '}" Style="{StaticResource SuperSmallSpan}"/>
                                <Span Text="{Binding ModeH, Converter={StaticResource MbPerSecondToAutoUnit}}" Style="{StaticResource SuperSmallSpan}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label Style="{StaticResource SmallLabel}" HorizontalOptions="Start">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding MaxAdjusted, Converter={StaticResource MbPerSecondToAuto}}"  />
                                <Span Text="{Binding Source={x:Static vm:ViewModelContainer.L11n}, Max, StringFormat='&#10;{0}, '}" Style="{StaticResource SuperSmallSpan}"/>
                                <Span Text="{Binding MaxAdjusted, StringFormat='{0} ', Converter={StaticResource MbPerSecondToAutoUnit}}" Style="{StaticResource SuperSmallSpan}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </StackLayout>

            </ctrl:GridItem>
        </DataTemplate>
    </ctrl:GridRepeater.ItemTemplate>
    <ctrl:GridRepeater.FooterTemplate>
        <DataTemplate>
            <ctrl:GridItem>
                <!-- col 0-->
                <!--<Label Text="{Binding CurrentTest, Converter={StaticResource KeyToL11n}}" LineBreakMode="WordWrap"
                       VerticalOptions="CenterAndExpand" />-->
                <Label LineBreakMode="WordWrap">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding CurrentTest, Converter={StaticResource KeyToL11n}}" />
                            <Span Text="{Binding BlockSizeBytes, StringFormat=' [{0}', Converter={StaticResource BytesToAutoShort}}"/>
                            <Span Text="{Binding BlockSizeBytes, StringFormat='{0}]', Converter={StaticResource BytesToAutoUnit}}" />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>

                <!-- col 1-2-->
                <Label Text="{Binding TestStatusMessage}" IsVisible="{Binding ShowTestStatusMessage}" Style="{StaticResource GrayedLabel}"
                       HorizontalOptions="Fill" VerticalOptions="CenterAndExpand" VerticalTextAlignment="Start" Grid.Column="1" Grid.ColumnSpan="2">
                    <Label.HeightRequest>
                        <OnPlatform x:TypeArguments="x:Double">
                            <On Platform="macOS" Value="24"/> <!-- macOS hack to avoid aligning percent to the bottom, VerticalOptions not working -->
                            <On Platform="Android, WPF" Value="-1"/>
                        </OnPlatform>
                    </Label.HeightRequest>
                </Label>
                <!-- col 1-->
                <Label IsVisible="{Binding ShowCurrentSpeed}" Style="{StaticResource AccentedLabel}" VerticalOptions="CenterAndExpand" Grid.Column="1">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding RecentResultMbps, Converter={StaticResource MbPerSecondToAuto}}" />
                            <Span Text="{Binding RecentResultMbps, Mode=OneWay, Converter={StaticResource MbPerSecondToAutoUnit} , StringFormat='&#10;{0}'}}" Style="{StaticResource AccentedItalicSpan}" /> 
                        </FormattedString>
                    </Label.FormattedText>
                    <Label.WidthRequest>
                        <OnPlatform x:TypeArguments="x:Double">
                            <On Platform="macOS, WPF" Value="60"/> 
                            <On Platform="Android, iOS" Value="55"/>
                        </OnPlatform>
                    </Label.WidthRequest>
                </Label>
                
                <!-- col 2 -->
                <ctrl2:TimeSeriesGraph VerticalOptions="CenterAndExpand" Results="{Binding RecentResults}" Trigger="{Binding ProgressPercent}" IsVisible="{Binding ShowTimeSeries}" Color="{StaticResource DefaultColor}"
                                      TotalPoints="{Binding SeqTotalBlocks}" Clip="True" Smoothing="{Binding SmoothTimeSeries}" Grid.Column="2" HeightRequest="38">
                    <ctrl2:TimeSeriesGraph.Margin>
                        <OnPlatform x:TypeArguments="Thickness">
                            <On Platform="macOS, WPF" Value="4, 2, 4, 2"/> 
                            <On Platform="Android, iOS" Value="4, 3, 4, 4"/>
                        </OnPlatform>
                    </ctrl2:TimeSeriesGraph.Margin>
                </ctrl2:TimeSeriesGraph>

                <ctrl2:HistogramGraph VerticalOptions="CenterAndExpand" Results="{Binding RecentResults}" Trigger="{Binding ProgressPercent}" BinsNumber="12" IsVisible="{Binding ShowHistogram}" 
                                     Color="{StaticResource DefaultColor}" Grid.Column="2" HeightRequest="38" CacheId="{Binding RandTestCounterForHistogramCache}"
                                     ModeH="{Binding ModeH, Mode=OneWayToSource}" ModeHPercent="{Binding ModeHPercent, Mode=OneWayToSource}">
                    <ctrl2:HistogramGraph.Margin>
                        <OnPlatform x:TypeArguments="Thickness">
                            <On Platform="macOS, WPF" Value="4, 2, 4, 2"/> 
                            <On Platform="Android, iOS" Value="4, 3, 4, 4"/>
                        </OnPlatform>
                    </ctrl2:HistogramGraph.Margin>
                </ctrl2:HistogramGraph>
               
            </ctrl:GridItem>
        </DataTemplate>
    </ctrl:GridRepeater.FooterTemplate>
</local:TestResultsBase>